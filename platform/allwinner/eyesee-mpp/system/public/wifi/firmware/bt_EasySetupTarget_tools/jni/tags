!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AKISS_KEY_STRING_LEN	akiss.h	7;"	d
AKISS_PORT	main_wiced.c	38;"	d	file:
BSSID	scan.c	/^    struct ether_addr BSSID;$/;"	m	struct:wl_bss_info	typeref:struct:wl_bss_info::ether_addr	file:
BSSID	scan.c	/^    struct ether_addr BSSID;$/;"	m	struct:wl_bss_info_107	typeref:struct:wl_bss_info_107::ether_addr	file:
CHECK_IOCTL_BUFFER	easy_setup_wiced.c	44;"	d	file:
CHECK_RETURN	easy_setup_wiced.c	50;"	d	file:
CLIENT_AP_BAND	wifi_config_dct.h	48;"	d
CLIENT_AP_BSS_TYPE	wifi_config_dct.h	45;"	d
CLIENT_AP_CHANNEL	wifi_config_dct.h	47;"	d
CLIENT_AP_PASSPHRASE	wifi_config_dct.h	44;"	d
CLIENT_AP_SECURITY	wifi_config_dct.h	46;"	d
CLIENT_AP_SSID	wifi_config_dct.h	43;"	d
CONFIG_AP_CHANNEL	wifi_config_dct.h	34;"	d
CONFIG_AP_PASSPHRASE	wifi_config_dct.h	32;"	d
CONFIG_AP_SECURITY	wifi_config_dct.h	33;"	d
CONFIG_AP_SSID	wifi_config_dct.h	31;"	d
BCAST_KEY_STRING_LEN	bcast.h	7;"	d
BCAST_NONCE_PAD_LEN	bcast.h	8;"	d
DEFAULT_PROTOCOL_MASK	easy_setup_linux.c	30;"	d	file:
DOT11_BSSTYPE_ANY	scan.c	9;"	d	file:
EASY_SETUP_PROTO_AKISS	easy_setup.h	/^    EASY_SETUP_PROTO_AKISS,$/;"	e	enum:__anon17
EASY_SETUP_PROTO_CHANGHONG	easy_setup.h	/^    EASY_SETUP_PROTO_CHANGHONG,$/;"	e	enum:__anon17
EASY_SETUP_PROTO_BCAST	easy_setup.h	/^    EASY_SETUP_PROTO_BCAST = 0,$/;"	e	enum:__anon17
EASY_SETUP_PROTO_MAX	easy_setup.h	/^    EASY_SETUP_PROTO_MAX,$/;"	e	enum:__anon17
EASY_SETUP_PROTO_NEEZE	easy_setup.h	/^    EASY_SETUP_PROTO_NEEZE,$/;"	e	enum:__anon17
EASY_SETUP_PROTO_XIAOMI	easy_setup.h	/^    EASY_SETUP_PROTO_XIAOMI,$/;"	e	enum:__anon17
EASY_SETUP_RESTART	easy_setup.h	/^    EASY_SETUP_RESTART,$/;"	e	enum:__anon18
EASY_SETUP_START	easy_setup.h	/^    EASY_SETUP_START,$/;"	e	enum:__anon18
EASY_SETUP_STATE_DONE	easy_setup.h	6;"	d
EASY_SETUP_STOP	easy_setup.h	/^    EASY_SETUP_STOP = 0,$/;"	e	enum:__anon18
ES_TARGET_VERSION	easy_setup_linux.c	17;"	d	file:
ETHER_ADDR_LEN	scan.c	8;"	d	file:
IPADDR	setup.py	/^IPADDR = '192.168.0.255'$/;"	v
LOCAL_FORCE_STATIC_EXECUTABLE	Android.mk	/^LOCAL_FORCE_STATIC_EXECUTABLE := true$/;"	m
LOCAL_LDFLAGS	Android.mk	/^LOCAL_LDFLAGS := -static$/;"	m
LOCAL_MODULE	Android.mk	/^LOCAL_MODULE    := setup$/;"	m
LOCAL_MODULE_TAGS	Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_PATH	Android.mk	/^LOCAL_PATH := $(call my-dir)$/;"	m
LOCAL_SRC_FILES	Android.mk	/^LOCAL_SRC_FILES := main_linux.c easy_setup_linux.c easy_setup.c scan.c bcast.c neeze.c akiss.c changhong.c$/;"	m
LOCAL_STATIC_LIBRARIES	Android.mk	/^LOCAL_STATIC_LIBRARIES := libc$/;"	m
LOGD	common.h	17;"	d
LOGE	common.h	16;"	d
NAME	setup.mk	/^NAME := App_easy_setup$/;"	m
NEEZE_KEY_STRING_LEN	neeze.h	7;"	d
PACKETDATA	setup.py	/^PACKETDATA = 'Hello!'$/;"	v
PARAM_MAX_LEN	easy_setup_linux.c	24;"	d	file:
PARAM_MAX_LEN	easy_setup_wiced.c	22;"	d	file:
PORTNUM	setup.py	/^PORTNUM = 50007$/;"	v
QUERY_INTERVAL_MS	easy_setup_linux.c	20;"	d	file:
QUERY_TIMEOUT_MS	easy_setup_linux.c	19;"	d	file:
RESULT_MAX_LEN	easy_setup_linux.c	25;"	d	file:
RESULT_MAX_LEN	easy_setup_wiced.c	23;"	d	file:
RETURN_WITH_ASSERT	easy_setup_wiced.c	58;"	d	file:
RSSI	scan.c	/^    int16       RSSI;$/;"	m	struct:wl_bss_info	file:
RSSI	scan.c	/^    int16       RSSI;$/;"	m	struct:wl_bss_info_107	file:
SCAN_TO_GET_SECURITY	easy_setup_wiced.c	38;"	d	file:
SNR	scan.c	/^    int16       SNR;$/;"	m	struct:wl_bss_info	file:
SOFT_AP_CHANNEL	wifi_config_dct.h	40;"	d
SOFT_AP_PASSPHRASE	wifi_config_dct.h	38;"	d
SOFT_AP_SECURITY	wifi_config_dct.h	39;"	d
SOFT_AP_SSID	wifi_config_dct.h	37;"	d
SSID	scan.c	/^    uint8       SSID[32];$/;"	m	struct:wl_bss_info	file:
SSID	scan.c	/^    uint8       SSID[32];$/;"	m	struct:wl_bss_info_107	file:
SSID	scan.c	/^    uint8       SSID[32];$/;"	m	struct:wlc_ssid	file:
SSID_len	scan.c	/^    uint32      SSID_len;$/;"	m	struct:wlc_ssid	file:
SSID_len	scan.c	/^    uint8       SSID_len;$/;"	m	struct:wl_bss_info	file:
SSID_len	scan.c	/^    uint8       SSID_len;$/;"	m	struct:wl_bss_info_107	file:
WICED_COUNTRY_CODE	wifi_config_dct.h	51;"	d
WIFI_CONFIG_DCT_H	setup.mk	/^WIFI_CONFIG_DCT_H := wifi_config_dct.h$/;"	m
WLAN_IFACE	easy_setup_linux.c	22;"	d	file:
WLAN_SECURITY_NONE	easy_setup.h	/^    WLAN_SECURITY_NONE = 0,$/;"	e	enum:__anon16
WLAN_SECURITY_WEP	easy_setup.h	/^    WLAN_SECURITY_WEP,$/;"	e	enum:__anon16
WLAN_SECURITY_WPA	easy_setup.h	/^    WLAN_SECURITY_WPA,$/;"	e	enum:__anon16
WLAN_SECURITY_WPA2	easy_setup.h	/^    WLAN_SECURITY_WPA2,$/;"	e	enum:__anon16
WLC_GET_VAR	easy_setup_linux.c	27;"	d	file:
WLC_SCAN	scan.c	15;"	d	file:
WLC_SCAN_RESULTS	scan.c	16;"	d	file:
WLC_SET_VAR	easy_setup_linux.c	28;"	d	file:
__AKISS_H__	akiss.h	2;"	d
__CHANGHONG_H__	changhong.h	2;"	d
__BCAST_H__	bcast.h	2;"	d
__EASY_SETUP_COMMON_H__	common.h	2;"	d
__EASY_SETUP_H__	easy_setup.h	2;"	d
__EASY_SETUP_SCAN_H__	scan.h	2;"	d
__NEEZE_H__	neeze.h	2;"	d
abort_scan	easy_setup_wiced.c	/^    int abort_scan;$/;"	m	struct:__anon5	file:
active_time	scan.c	/^    int32 active_time;$/;"	m	struct:wl_scan_params	file:
akiss_get_param	akiss.c	/^void akiss_get_param(void* p) {$/;"	f
akiss_get_random	akiss.c	/^int akiss_get_random(uint8* random) {$/;"	f
akiss_param_t	akiss.h	/^} akiss_param_t;$/;"	t	typeref:struct:__anon1
akiss_result_t	akiss.h	/^} akiss_result_t;$/;"	t	typeref:struct:__anon2
akiss_set_key	akiss.c	/^int akiss_set_key(const char* key) {$/;"	f
akiss_set_result	akiss.c	/^void akiss_set_result(const void* p) {$/;"	f
ap_bssid	easy_setup.h	/^    mac_t          ap_bssid;             \/* target AP's mac address *\/$/;"	m	struct:__anon20
ap_ssid	easy_setup.h	/^    ssid_t         ap_ssid;              \/* target AP's name *\/$/;"	m	struct:__anon20
application_start	main_wiced.c	/^void application_start(void)$/;"	f
atim_window	scan.c	/^    uint16      atim_window;$/;"	m	struct:wl_bss_info	file:
atim_window	scan.c	/^    uint16      atim_window;$/;"	m	struct:wl_bss_info_107	file:
basic_mcs	scan.c	/^    uint8       basic_mcs[16];$/;"	m	struct:wl_bss_info	file:
beacon_period	scan.c	/^    uint16      beacon_period;$/;"	m	struct:wl_bss_info	file:
beacon_period	scan.c	/^    uint16      beacon_period;$/;"	m	struct:wl_bss_info_107	file:
bss_info	scan.c	/^    wl_bss_info_t bss_info[1];$/;"	m	struct:wl_scan_results	file:
bss_type	scan.c	/^    int8 bss_type;$/;"	m	struct:wl_scan_params	file:
bssid	scan.c	/^    struct ether_addr bssid;$/;"	m	struct:wl_scan_params	typeref:struct:wl_scan_params::ether_addr	file:
buf	easy_setup_linux.c	/^    void *buf;       \/* pointer to user buffer *\/$/;"	m	struct:wl_ioctl	file:
buflen	scan.c	/^    uint32 buflen;$/;"	m	struct:wl_scan_results	file:
capability	scan.c	/^    uint16      capability;$/;"	m	struct:wl_bss_info	file:
capability	scan.c	/^    uint16      capability;$/;"	m	struct:wl_bss_info_107	file:
changhong_get_sec_mode	changhong.c	/^int changhong_get_sec_mode(uint8* sec) {$/;"	f
changhong_result_t	changhong.h	/^} changhong_result_t;$/;"	t	typeref:struct:__anon6
changhong_set_result	changhong.c	/^void changhong_set_result(const void* p) {$/;"	f
channel	easy_setup_wiced.c	/^    uint8_t channel;$/;"	m	struct:__anon5	file:
channel	scan.c	/^    uint8       channel;$/;"	m	struct:wl_bss_info_107	file:
channel_list	scan.c	/^    uint16 channel_list[1];$/;"	m	struct:wl_scan_params	file:
channel_num	scan.c	/^    int32 channel_num;$/;"	m	struct:wl_scan_params	file:
chanspec	scan.c	/^    uint16      chanspec;$/;"	m	struct:wl_bss_info	file:
cmd	easy_setup_linux.c	/^    uint cmd;        \/* common ioctl definition *\/$/;"	m	struct:wl_ioctl	file:
bcast_get_param	bcast.c	/^void bcast_get_param(void* p) {$/;"	f
bcast_get_sender_ip	bcast.c	/^int bcast_get_sender_ip(char buff[], int buff_len) {$/;"	f
bcast_get_sender_port	bcast.c	/^int bcast_get_sender_port(uint16* port) {$/;"	f
bcast_param_t	bcast.h	/^} bcast_param_t;$/;"	t	typeref:struct:__anon12
bcast_result_t	bcast.h	/^} bcast_result_t;$/;"	t	typeref:struct:__anon13
bcast_set_key	bcast.c	/^int bcast_set_key(const char* key) {$/;"	f
bcast_set_key_qqcon	bcast.c	/^int bcast_set_key_qqcon(const char* key) {$/;"	f
bcast_set_result	bcast.c	/^void bcast_set_result(const void* p) {$/;"	f
count	scan.c	/^        uint    count;$/;"	m	struct:wl_bss_info::__anon4	file:
count	scan.c	/^        uint    count;$/;"	m	struct:wl_bss_info_107::__anon3	file:
count	scan.c	/^    uint32 count;$/;"	m	struct:wl_scan_results	file:
ctl_ch	scan.c	/^    uint8       ctl_ch;$/;"	m	struct:wl_bss_info	file:
debug_enable	main_linux.c	/^int debug_enable = 0;$/;"	v
dtim_period	scan.c	/^    uint8       dtim_period; $/;"	m	struct:wl_bss_info_107	file:
dtim_period	scan.c	/^    uint8       dtim_period;$/;"	m	struct:wl_bss_info	file:
dtoh16	scan.c	13;"	d	file:
dtoh32	scan.c	12;"	d	file:
easy_setup_enable	easy_setup_wiced.c	/^wwd_result_t easy_setup_enable( uint16_t proto_mask, easy_setup_workspace_t *ws )$/;"	f
easy_setup_enable_akiss	easy_setup.c	/^void easy_setup_enable_akiss() {$/;"	f
easy_setup_enable_changhong	easy_setup.c	/^void easy_setup_enable_changhong() {$/;"	f
easy_setup_enable_bcast	easy_setup.c	/^void easy_setup_enable_bcast() {$/;"	f
easy_setup_enable_neeze	easy_setup.c	/^void easy_setup_enable_neeze() {$/;"	f
easy_setup_enable_protocols	easy_setup.c	/^void easy_setup_enable_protocols(uint16 proto_mask) {$/;"	f
easy_setup_enable_qqcon	easy_setup.c	/^void easy_setup_enable_qqcon() {$/;"	f
easy_setup_events	easy_setup_wiced.c	/^static const wwd_event_num_t easy_setup_events[] = { WLC_E_WAKE_EVENT, WLC_E_NONE };$/;"	v	file:
easy_setup_get_param	easy_setup.c	/^void easy_setup_get_param(uint16 proto_mask, tlv_t** pptr) {$/;"	f
easy_setup_get_password	easy_setup_linux.c	/^int easy_setup_get_password(char buff[], int buff_len) {$/;"	f
easy_setup_get_protocol	easy_setup_linux.c	/^int easy_setup_get_protocol(uint8* protocol) {$/;"	f
easy_setup_get_protocol	easy_setup_wiced.c	/^int easy_setup_get_protocol(uint8_t* protocol) {$/;"	f
easy_setup_get_security	easy_setup_linux.c	/^int easy_setup_get_security() {$/;"	f
easy_setup_get_ssid	easy_setup_linux.c	/^int easy_setup_get_ssid(char buff[], int buff_len) {$/;"	f
easy_setup_ioctl	easy_setup_linux.c	/^int easy_setup_ioctl(int cmd, int set, void* param, int size) {$/;"	f
easy_setup_iovar	easy_setup_linux.c	/^int easy_setup_iovar(int set, void* param, int size) {$/;"	f
easy_setup_param_t	easy_setup.h	/^} easy_setup_param_t;$/;"	t	typeref:struct:__anon19
easy_setup_query	easy_setup_linux.c	/^int easy_setup_query() {$/;"	f
easy_setup_query	easy_setup_wiced.c	/^int easy_setup_query( easy_setup_workspace_t *ws )$/;"	f
easy_setup_restart	easy_setup_wiced.c	/^wwd_result_t easy_setup_restart( void )$/;"	f
easy_setup_result_handler	easy_setup_wiced.c	/^static void* easy_setup_result_handler( const wwd_event_header_t* event_header, $/;"	f	file:
easy_setup_result_t	easy_setup.h	/^} easy_setup_result_t;$/;"	t	typeref:struct:__anon20
easy_setup_set_result	easy_setup.c	/^void easy_setup_set_result(uint8 protocol, void* p) {$/;"	f
easy_setup_start	easy_setup_linux.c	/^int easy_setup_start() {$/;"	f
easy_setup_start	easy_setup_wiced.c	/^int easy_setup_start()$/;"	f
easy_setup_stop	easy_setup_linux.c	/^int easy_setup_stop() {$/;"	f
easy_setup_stop	easy_setup_wiced.c	/^int easy_setup_stop( void )$/;"	f
easy_setup_workspace_t	easy_setup_wiced.c	/^} easy_setup_workspace_t;$/;"	t	typeref:struct:__anon5	file:
enable	easy_setup.h	/^    uint8 enable;    \/* START\/STOP\/RESTART easy setup *\/ $/;"	m	struct:__anon19
es_complete	easy_setup_wiced.c	/^    wiced_semaphore_t es_complete;$/;"	m	struct:__anon5	file:
es_result	akiss.h	/^    easy_setup_result_t es_result;$/;"	m	struct:__anon2
es_result	changhong.h	/^    easy_setup_result_t es_result;$/;"	m	struct:__anon6
es_result	bcast.h	/^    easy_setup_result_t es_result;$/;"	m	struct:__anon13
es_result	neeze.h	/^    easy_setup_result_t es_result;$/;"	m	struct:__anon15
ether_addr	scan.c	/^struct    ether_addr {$/;"	s	file:
flags	scan.c	/^    uint8       flags;$/;"	m	struct:wl_bss_info	file:
g_akiss_param	akiss.c	/^static akiss_param_t g_akiss_param;$/;"	v	file:
g_akiss_result	akiss.c	/^static akiss_result_t g_akiss_result;$/;"	v	file:
g_changhong_result	changhong.c	/^static changhong_result_t g_changhong_result;$/;"	v	file:
g_bcast_param	bcast.c	/^static bcast_param_t g_bcast_param = {$/;"	v	file:
g_bcast_result	bcast.c	/^static bcast_result_t g_bcast_result;$/;"	v	file:
g_debug	easy_setup_linux.c	/^static uint8 g_debug = 0;$/;"	v	file:
g_ioc_fd	easy_setup_linux.c	/^static int g_ioc_fd = -1; \/* socket fd *\/$/;"	v	file:
g_neeze_param	neeze.c	/^static neeze_param_t g_neeze_param;$/;"	v	file:
g_neeze_result	neeze.c	/^static neeze_result_t g_neeze_result;$/;"	v	file:
g_protocol	easy_setup_linux.c	/^static uint8 g_protocol = 0;$/;"	v	file:
g_protocol	easy_setup_wiced.c	/^static uint8_t g_protocol = 0;$/;"	v	file:
g_protocol_mask	easy_setup_linux.c	/^uint16 g_protocol_mask = 0; \/* default no protocols enabled *\/$/;"	v
g_protocol_mask	easy_setup_wiced.c	/^uint16_t g_protocol_mask = 0x0;$/;"	v
g_result	easy_setup_linux.c	/^static easy_setup_result_t g_result;$/;"	v	file:
hex_str_to_int	easy_setup_wiced.c	/^static int hex_str_to_int( const char* hex_str )$/;"	f	file:
home_time	scan.c	/^    int32 home_time;$/;"	m	struct:wl_scan_params	file:
host_ip_address	bcast.h	/^    ip_address_t   host_ip_address;      \/* setup client's ip address *\/$/;"	m	struct:__anon13
host_ip_address	neeze.h	/^    ip_address_t host_ip_address;      \/* setup client's ip address *\/$/;"	m	struct:__anon15
host_port	bcast.h	/^    uint16         host_port;            \/* setup client's port *\/$/;"	m	struct:__anon13
host_port	neeze.h	/^    uint16 host_port;            \/* setup client's port *\/$/;"	m	struct:__anon15
htod32	scan.c	11;"	d	file:
ie_length	scan.c	/^    uint32      ie_length;$/;"	m	struct:wl_bss_info	file:
ie_length	scan.c	/^    uint32      ie_length;$/;"	m	struct:wl_bss_info_107	file:
ie_offset	scan.c	/^    uint16      ie_offset;$/;"	m	struct:wl_bss_info	file:
int16	common.h	11;"	d
int32	common.h	12;"	d
int8	common.h	10;"	d
ip	common.h	/^    } ip;$/;"	m	struct:__anon10	typeref:union:__anon10::__anon11
ip_address_t	common.h	/^} ip_address_t;$/;"	t	typeref:struct:__anon10
key_bytes	akiss.h	/^    uint8 key_bytes[AKISS_KEY_STRING_LEN];  \/* key string for decoding *\/$/;"	m	struct:__anon1
key_bytes	bcast.h	/^    uint8 key_bytes[BCAST_KEY_STRING_LEN];  \/* key string for decoding *\/$/;"	m	struct:__anon12
key_bytes	neeze.h	/^    uint8 key_bytes[NEEZE_KEY_STRING_LEN];$/;"	m	struct:__anon14
key_bytes_qqcon	bcast.h	/^    uint8 key_bytes_qqcon[BCAST_KEY_STRING_LEN];  \/* key string for decoding for qqcon *\/$/;"	m	struct:__anon12
len	common.h	/^    uint8 len;     \/**< SSID length *\/$/;"	m	struct:__anon8
len	easy_setup_linux.c	/^    uint len;        \/* length of user buffer *\/$/;"	m	struct:wl_ioctl	file:
length	common.h	/^    uint8 length;$/;"	m	struct:__anon7
length	scan.c	/^    uint32      length;$/;"	m	struct:wl_bss_info	file:
length	scan.c	/^    uint32      length;$/;"	m	struct:wl_bss_info_107	file:
mac_t	common.h	/^} mac_t;$/;"	t	typeref:struct:__anon9
main	main_linux.c	/^int main(int argc, char* argv[])$/;"	f
n_cap	scan.c	/^    uint8       n_cap;$/;"	m	struct:wl_bss_info	file:
nbss_cap	scan.c	/^    uint32      nbss_cap;$/;"	m	struct:wl_bss_info	file:
needed	easy_setup_linux.c	/^    uint needed;     \/* bytes needed (optional) *\/$/;"	m	struct:wl_ioctl	file:
neeze_get_param	neeze.c	/^void neeze_get_param(void* p) {$/;"	f
neeze_get_sender_ip	neeze.c	/^int neeze_get_sender_ip(char buff[], int buff_len) {$/;"	f
neeze_get_sender_port	neeze.c	/^int neeze_get_sender_port(uint16* port) {$/;"	f
neeze_param_t	neeze.h	/^} neeze_param_t;$/;"	t	typeref:struct:__anon14
neeze_result_t	neeze.h	/^} neeze_result_t;$/;"	t	typeref:struct:__anon15
neeze_set_key	neeze.c	/^int neeze_set_key(const char* key) {$/;"	f
neeze_set_result	neeze.c	/^void neeze_set_result(const void* p) {$/;"	f
nprobes	scan.c	/^    int32 nprobes;$/;"	m	struct:wl_scan_params	file:
octet	common.h	/^    uint8 octet[6]; \/**< Unique 6-byte MAC address *\/$/;"	m	struct:__anon9
octet	scan.c	/^    uint8 octet[ETHER_ADDR_LEN];$/;"	m	struct:ether_addr	file:
padding1	scan.c	/^    uint8       padding1[3];$/;"	m	struct:wl_bss_info	file:
param	easy_setup.h	/^    tlv_t param; \/* param blocks for each protocol *\/$/;"	m	struct:__anon19
param	easy_setup_wiced.c	/^    easy_setup_param_t param;$/;"	m	struct:__anon5	file:
passive_time	scan.c	/^    int32 passive_time;    $/;"	m	struct:wl_scan_params	file:
phy_noise	scan.c	/^    int8        phy_noise;$/;"	m	struct:wl_bss_info	file:
phy_noise	scan.c	/^    int8        phy_noise;$/;"	m	struct:wl_bss_info_107	file:
protocol	easy_setup_wiced.c	/^    uint8_t protocol;$/;"	m	struct:__anon5	file:
protocol_mask	easy_setup.h	/^    uint16 protocol_mask;  \/* set parameters to which protocol *\/ $/;"	m	struct:__anon19
random	akiss.h	/^    uint8 random; \/* akiss random byte *\/$/;"	m	struct:__anon2
random_bytes	bcast.h	/^    uint8 random_bytes[BCAST_NONCE_PAD_LEN]; \/* random bytes *\/$/;"	m	struct:__anon12
random_bytes_qqcon	bcast.h	/^    uint8 random_bytes_qqcon[BCAST_NONCE_PAD_LEN]; \/* random bytes for qqcon *\/$/;"	m	struct:__anon12
rates	scan.c	/^        uint8   rates[16];$/;"	m	struct:wl_bss_info::__anon4	file:
rates	scan.c	/^        uint8   rates[16];$/;"	m	struct:wl_bss_info_107::__anon3	file:
rateset	scan.c	/^    } rateset;$/;"	m	struct:wl_bss_info	typeref:struct:wl_bss_info::__anon4	file:
rateset	scan.c	/^    } rateset;$/;"	m	struct:wl_bss_info_107	typeref:struct:wl_bss_info_107::__anon3	file:
reserved	scan.c	/^    uint8       reserved[2];$/;"	m	struct:wl_bss_info	file:
result	easy_setup_wiced.c	/^    easy_setup_result_t result;$/;"	m	struct:__anon5	file:
s	setup.py	/^s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM, 0)$/;"	v
scan_and_get_security	scan.c	/^int scan_and_get_security(uint8 ch, uint8* mac) {$/;"	f
scan_complete	easy_setup_wiced.c	/^    wiced_semaphore_t scan_complete;$/;"	m	struct:__anon5	file:
scan_result	easy_setup_wiced.c	/^static wiced_scan_result_t  scan_result[1];$/;"	v	file:
scan_result_callback	easy_setup_wiced.c	/^static void scan_result_callback( wiced_scan_result_t** result_ptr, void* user_data, wiced_scan_status_t status  )$/;"	f	file:
scan_type	scan.c	/^    uint8 scan_type;$/;"	m	struct:wl_scan_params	file:
sec_mode	changhong.h	/^    uint8 sec_mode; \/* sec mode *\/$/;"	m	struct:__anon6
security	easy_setup_wiced.c	/^    wiced_security_t security;$/;"	m	struct:__anon5	file:
security_key	easy_setup.h	/^    uint8          security_key[64];     \/* target AP's password *\/$/;"	m	struct:__anon20
security_key_length	easy_setup.h	/^    uint8          security_key_length;  \/* length of password *\/$/;"	m	struct:__anon20
send_akiss_random	main_wiced.c	/^static wiced_result_t send_akiss_random(uint8_t random)$/;"	f	file:
set	easy_setup_linux.c	/^    unsigned char set;  \/* 1=set IOCTL; 0=query IOCTL *\/$/;"	m	struct:wl_ioctl	file:
ssid	scan.c	/^    wlc_ssid_t ssid;$/;"	m	struct:wl_scan_params	file:
ssid_t	common.h	/^} ssid_t;$/;"	t	typeref:struct:__anon8
state	easy_setup.h	/^    uint8          state;$/;"	m	struct:__anon20
tlv_t	common.h	/^} tlv_t;$/;"	t	typeref:struct:__anon7
type	common.h	/^    uint8 type;$/;"	m	struct:__anon7
uint16	common.h	7;"	d
uint32	common.h	8;"	d
uint8	common.h	6;"	d
usage	main_linux.c	/^void usage() {$/;"	f
used	easy_setup_linux.c	/^    uint used;       \/* bytes read or written (optional) *\/$/;"	m	struct:wl_ioctl	file:
v4	common.h	/^        uint32 v4;   \/**< IPv4 IP address *\/$/;"	m	union:__anon10::__anon11
v6	common.h	/^        uint32 v6[4];\/**< IPv6 IP address *\/$/;"	m	union:__anon10::__anon11
val	common.h	/^    uint8 val[32]; \/**< SSID name (AP name)  *\/$/;"	m	struct:__anon8
value	common.h	/^    uint8 value[0];$/;"	m	struct:__anon7
version	common.h	/^    uint8 version;   \/**< IPv4 or IPv6 type *\/$/;"	m	struct:__anon10
version	scan.c	/^    uint32      version;$/;"	m	struct:wl_bss_info	file:
version	scan.c	/^    uint32      version;$/;"	m	struct:wl_bss_info_107	file:
version	scan.c	/^    uint32 version;$/;"	m	struct:wl_scan_results	file:
vht_cap	scan.c	/^    uint8       vht_cap;$/;"	m	struct:wl_bss_info	file:
vht_rxmcsmap	scan.c	/^    uint16      vht_rxmcsmap;$/;"	m	struct:wl_bss_info	file:
vht_txmcsmap	scan.c	/^    uint16      vht_txmcsmap;$/;"	m	struct:wl_bss_info	file:
wl_bss_info	scan.c	/^typedef struct wl_bss_info {$/;"	s	file:
wl_bss_info_107	scan.c	/^typedef struct wl_bss_info_107 {$/;"	s	file:
wl_bss_info_107_t	scan.c	/^} wl_bss_info_107_t;$/;"	t	typeref:struct:wl_bss_info_107	file:
wl_bss_info_t	scan.c	/^} wl_bss_info_t;$/;"	t	typeref:struct:wl_bss_info	file:
wl_ioctl	easy_setup_linux.c	/^typedef struct wl_ioctl {$/;"	s	file:
wl_ioctl_t	easy_setup_linux.c	/^} wl_ioctl_t;$/;"	t	typeref:struct:wl_ioctl	file:
wl_scan_params	scan.c	/^typedef struct wl_scan_params {$/;"	s	file:
wl_scan_params_t	scan.c	/^} wl_scan_params_t;$/;"	t	typeref:struct:wl_scan_params	file:
wl_scan_results	scan.c	/^typedef struct wl_scan_results {$/;"	s	file:
wl_scan_results_t	scan.c	/^} wl_scan_results_t; $/;"	t	typeref:struct:wl_scan_results	file:
wlc_ssid	scan.c	/^typedef struct wlc_ssid {$/;"	s	file:
wlc_ssid_t	scan.c	/^} wlc_ssid_t;$/;"	t	typeref:struct:wlc_ssid	file:
